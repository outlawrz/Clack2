import java.util.Date;
import java.io.*;
import java.util.*;
public abstract class ClackData // is abstract so subclasses must implement abstract methods
{
    protected String username; //Protected Variables in CLackData class protected variables can be referenced again in subclasses without get method
    protected int type; //This is how we determine what action to take based on constants in the program.
    protected Date date; //This creates an object that describes the date that the class is run
    public final int CONSTANT_LISTUSERS=0;
    public final int CONSTANT_LOGOUT=1; // Constansts along with type let program know what action to take
    public final int CONSTANT_SENDMESSAGE=2;
    public final int CONSTANT_SENDFILE=3;//This is one of the constants used along with the type variable used to determine whta action to take

    public ClackData(String username, int type) //This constructor is used to create a ClackData object
    {
        this.username=username;
        this.type=type;
        Date date = new Date();
    }
    public ClackData(int type)
    {
        this("Anon",type);//"anon stands for ananymous for when no username is given
    }

    public ClackData()
    {
        this("Anon", 0);
    }

    public int getType()
    {
        return (this.type);
    }
    public String getUserName()
    {
        return this.username;
    }

    public Date getDate()
    {
        return this.date;
    }
    public abstract String getData();
        // This function will be implemented in both the MessageClackData and FileClackData
    public abstract String getData(String key);
    protected String encrypt(String inputStringtoEncrypt, String key)
    {
        return "booty";
    }

    protected String decrypt(String inputStringtoDecrypt, String key)
    {
        return "cheeks";
    }
}
